{"version":3,"sources":["pages/communicate/index.js"],"names":["Communicate","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","antd_lib_card__WEBPACK_IMPORTED_MODULE_1___default","title","Component"],"mappings":"6MAoGMA,2LAEE,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAAE,EAAAH,EAAA,CACII,MAAM,wBAENL,EAAAC,EAAAC,cAAA,mQAtGpBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wfAwGgBF,EAAAC,EAAAC,cAAAE,EAAAH,EAAA,CACII,MAAM,wBAENL,EAAAC,EAAAC,cAAA,iDA7EpBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,23CA+D0BI,cAqBXP","file":"static/js/communicate.9c92a725.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Card } from 'antd'\nimport \"./index.less\"\n\nlet downCom = () => (\n<pre>\n<code>\n{`子组件：\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Child({ name }) {\n    return <h1>Hello, {name}</h1>;\n}\n\nChild.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n\n父组件：\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Child({ name }) {\n    return <h1>Hello, {name}</h1>;\n}\n\nChild.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n`}\n</code>\n</pre>\n)\n\nlet upCom = () => (\n<pre>\n<cord>\n{`\n子组件\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass List3 extends Component {\n    static propTypes = {\n        hideConponent: PropTypes.func.isRequired,\n    }\n    render() {\n        return (\n            <div>\n                哈哈,我是List3\n                <button onClick={this.props.hideConponent}>隐藏List3组件</button>\n            </div>\n        );\n    }\n}\n\nexport default List3;\n\n父组件\nimport React, { Component } from 'react';\n\nimport List3 from './components/List3';\nexport default class App extends Component {\n    constructor(...args) {\n        super(...args);\n        this.state = {\n            isShowList3: false,\n        };\n    }\n    showConponent = () => {\n        this.setState({\n            isShowList3: true,\n        });\n    }\n    hideConponent = () => {\n        this.setState({\n            isShowList3: false,\n        });\n    }\n    render() {\n        return (\n            <div>\n                <button onClick={this.showConponent}>显示Lists组件</button>\n                {\n                    this.state.isShowList3 ?\n                        <List3 hideConponent={this.hideConponent} />\n                    :\n                    null\n                }\n\n            </div>\n        );\n    }\n}\n`}\n</cord>\n</pre>\n)\n\nclass Communicate extends Component {\n    render () {\n        return (\n            <div className=\"communicate\">\n                <Card\n                    title=\"父 → 子\"\n                >\n                    <p>React数据流动是单向的,父组件向子组件通信也是最常见的;父组件通过props向子组件传递需要的信息</p>\n                    {downCom()}\n                </Card>\n                <Card\n                    title=\"子 → 父\"\n                >\n                    <p>利用回调函数</p>\n                    {upCom()}\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Communicate"],"sourceRoot":""}