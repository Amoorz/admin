{"version":3,"sources":["utils/cookie.js","utils/utils.js","api/axios.js","pages/login/inputSendCode.js","pages/login/login.js","services/login-service.js","pages/login/index.js"],"names":["window","location","hostname","__webpack_require__","d","__webpack_exports__","envConfig","regExp","checkFields","env","process","MY_ENV","dev","api","imgPrefix","newImagePrefix","designImagePrefix","fileUrl","uat","prod","tel","chinese","int","intDot","obj","sth","i","constructor","String","Array","length","noApiToken","urlEncode","param","key","encode","paramStr","t","encodeURIComponent","k","Ajax","method","url","params","toUpperCase","myRequest","indexOf","header","Accept","Access-Control-Allow-Origin","Access-Control-Allow-Headers","JSON","parse","localStorage","getItem","includes","Content-Type","setHeader","Promise","resolve","reject","axios","headers","data","then","response","console","log","ok","status","responseData","IsSucceed","catch","err","get","_get","Object","F_hole_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","F_hole_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","IsUrlParams","enCodeData","wrap","_context","prev","next","substr","abrupt","stop","this","_x","_x2","_x3","apply","arguments","post","_post","_callee2","_context2","_x4","_x5","put","_put","_callee3","_context3","stringify","_x6","_x7","delete","_delete2","_callee4","_context4","_x8","_x9","_x10","uploadPost","_uploadPost","_callee5","formData","_context5","_x11","_x12","InputSendCode","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","countdown","getCode","bind","assertThisInitialized","inputChange","e","val","target","value","setState","props","changeState","defineProperty","changeKey","num","_this2","setTimeout","changeCountdown","addonBefore","_react_16_7_0_react_default","createElement","input_default","icon_default","type","addonAfter","className","style","width","display","onClick","toString","maxLength","placeholder","onChange","Component","TabPane","tabs_default","FormItem","form_default","Item","LoginFrom","loginType","buttonLoading","userName","password","code","formValues","tabsChange","handleSubmit","loginClick","loginSuccess","loginError","changeFormState","removeItem","fn","form","setFieldsValue","preventDefault","validateFieldsAndScroll","values","passLogin","codeLogin","username","message_default","success","setItem","token","history","push","concat","layoutTree","path","error","_this$state","getFieldDecorator","defaultActiveKey","tab","onSubmit","rules","required","message","button_default","loading","htmlType","pattern","inputSendCode","withRouter","create","Login","login","connect","responsive","responsiveData"],"mappings":"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","file":"static/js/login.e281aa6e.chunk.js","sourcesContent":["const hostName = window.location.hostname\n\n// 写cookies（设置作用域）\nconst setCookie = (name, value) => {\n    var Days = 30\n    var exp = new Date()\n    exp.setTime(exp.getTime() + Days * 24 * 60 * 60 * 1000)\n    let hostname = hostName.substring(hostName.indexOf(\".\") + 1) // 设置为一级域名\n    document.cookie = name + \"=\" + escape(value) + \";expires=\" + exp.toGMTString() + \";domain=\" + hostname + \";path=/\"\n}\n\n//读取cookies\nconst getCookie = (name) => {\n    var reg = new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\"),\n        arr = document.cookie.match(reg)\n    if (arr) {\n        return unescape(arr[2])\n    } else {\n        return null\n    }\n}\n\n//删除cookies\n// const delCookie = (name) => {\n//     var exp = new Date()\n//     exp.setTime(exp.getTime() - 1)\n//     var cval = getCookie(name)\n//     if (cval != null)\n//         document.cookie = name + \"=\" + cval + \"expires=\" + exp.toGMTString()\n// }\n\n// 删除所有cookie\nconst clearAllCookie = () => {\n    var keys = document.cookie.match(/[^ =;]+(?=)/g)\n    if(keys) {\n        for(var i = keys.length; i--;)\n            document.cookie = keys[i] + '=0;expires=' + new Date(0).toUTCString()\n    }\n}\n\nconst delCookie = (name) => {\n    var date = new Date()\n    date.setTime(date.getTime() - 10000) \n    document.cookie = name + \"=a; expires=\" + date.toGMTString()\n}\n\n// //删除cookies（有作用域的）\n// function delCookie(name) {\n//     var exp = new Date()\n//     var name = \"access_token\"\n//     exp.setTime(exp.getTime() - 1)\n//     var cval = getCookie(name)\n//     if (cval != null) {\n//         let hostname = hostName.substring(hostName.indexOf(\".\") + 1)\n//         document.cookie = name + \"=''expires=\" + exp.toGMTString() + \"domain=\" + hostname + \"path=/\"\n//     }\n// }\n\nexport {\n    setCookie,\n    getCookie,\n    delCookie,\n    clearAllCookie\n}","import { setCookie, getCookie, delCookie, clearAllCookie } from \"./cookie\"\n// import Global from \"./Global\";\nconst env = process.env.MY_ENV || 'dev'\n\nlet envConfig = {\n    'dev':{\n        api:\"https://www.easy-mock.com/mock/5c09dc3357b1777d53e590c8/admin\",\n        imgPrefix:\"http://wxpt.localhome.cn\",//房源图片\n        newImagePrefix:\"http://120.78.15.214\",//上传图片\n        designImagePrefix:\"http://qy.localhome.com.cn/locals\",// 签名图片\n        // fileUrl:'http://192.168.0.215:9092'\n        fileUrl:'http://120.76.204.105'\n    },\n    'uat':{\n        api:\"http://uat.localhome.cn/api\",\n        imgPrefix:\"http://wxpt.localhome.cn\",\n        newImagePrefix:\"http://120.78.15.214\",\n        designImagePrefix:\"http://qy.localhome.com.cn/locals\",\n        // fileUrl:'http://192.168.0.215:9092'\n        fileUrl: 'http://120.76.204.105'//临时下载文件地址 到时候改测试的\n    },\n    'prod':{\n        api:\"http://ms.localhome.cn/api\",\n        imgPrefix:\"http://app.localhome.cn\",//线上房源图片\n        newImagePrefix:\"http://120.76.204.105\",\n        designImagePrefix:\"http://qy.localhome.com.cn/locals\",\n        fileUrl:'http://120.76.204.105'\n    }\n}\nenvConfig = envConfig[env]\n\nconst getNewImagePrefix = (url) => {\n    if(typeof url !== \"string\")return \"\"\n    if((url.includes(\"/upload/\") || url.includes(\"Article\")) && (!url.includes(\"http\"))){\n        return (envConfig.newImagePrefix + url)\n    }\n    return url\n}\n\nconst getImgPrefix = (url) => {\n    if(typeof url !== \"string\")return \"\"\n    if(url.includes(\"/upload/\") || !url.includes(\"http\")){\n        return (envConfig.imgPrefix + url)\n    }\n    return url\n}\n\n// const onExit = function () {\n//     // 退出\n//     return new Promise((resolve, reject) => {\n//         sessionStorage.clear()\n//         clearAllCookie()\n//         Global.userInfo = {}\n//         Global.role = []\n//         Global.token = ''\n//         Global.pathName = ''\n//         window.location.reload()\n//         resolve({success: true})\n//     })\n// }\n// 正则\nconst regExp = {\n    tel: /^1[3|4|5|7|8][0-9]\\d{8}$/,\n    chinese: /[\\u4e00-\\u9fa5]{1}/,\n    int: /^[1-9]\\d*$/,\n    intDot: /^([1-9]\\d*|0)(\\.\\d{1,2})?$/\n}\n\nconst pageOption = {\n    // 分页公共object\n    pageSizeOpts: ['10','20','50','100','2000'],\n    pageNum: 1,\n    pageSize: 10\n}\nconst dataFormat = function (d, fmt = 'yyyy-MM-dd') {\n    // 日期格式化\n    if (!(d > 0)) {\n        return ''\n    }\n    if (typeof d !== \"number\") {\n        d = +d\n    }\n    var date = new Date(d)\n    if (/(y+)/.test(fmt)) {\n        fmt = fmt.replace(regExp.$1, (date.getFullYear() + '').substr(4 - regExp.$1.length))\n    }\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds()\n    }\n    for (let k in o) {\n        if (new regExp(`(${k})`).test(fmt)) {\n            let str = o[k] + ''\n            fmt = fmt.replace(regExp.$1, (regExp.$1.length === 1) ? str : ('00' + str).substr(str.length))\n        }\n    }\n    return fmt\n}\n\n\nfunction checkKey (list) {\n    let items = list\n\n    if(checkType.isArray (items)){\n        function connetKey () {\n            return createUUID()\n        }\n        for(let i in items){\n            if (items[i]) {\n                items[i]['key'] = items[i].key ? items[i].key : connetKey()\n            }\n        }\n        return items\n    }else{\n        return items\n    }\n}\n\nfunction getNowTime (){\n    return new Date().getTime()\n}\n\nfunction createUUID (t = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx',ary = 16){\n    var d = getNowTime ()\n    var uuid = t.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * ary) % ary | 0\n        d = Math.floor(d / ary)\n        return (c === 'x' ? r : ((r && 0x7) || 0x8)).toString(ary)\n    })\n    return uuid\n}\n\nconst checkType = {\n    isNumber : function (arg){\n        return Object.prototype.toString.call(arg) === '[object Number]'\n    },\n    isString : function (arg){\n        return Object.prototype.toString.call(arg) === '[object String]'\n    },\n    isUndefined : function (arg){\n        return Object.prototype.toString.call(arg) === '[object Undefined]'\n    },\n    isBoolean : function (arg){\n        return Object.prototype.toString.call(arg) === '[object Boolean]'\n    },\n    isObject : function (arg){\n        return Object.prototype.toString.call(arg) === '[object Object]'\n    },\n    isArray : function (arg){\n        return Object.prototype.toString.call(arg) === '[object Array]'\n    },\n    isFunction : function (arg){\n        return Object.prototype.toString.call(arg) === '[object Function]'\n    },\n    isEmpty: function (s) {\n        if(typeof(s) === \"undefined\" || s === null || s === \"\" || s.toString().trim() === \"\") {\n            return true\n        } else {\n            return false\n        }\n    }\n}\n\n// 筛选obj属性，只保留有定义的字段\nfunction checkFields (obj) {\n    let sth = {}\n    for (let i in obj) {\n        if (obj[i]) {\n            if (obj[i].constructor === String && obj[i]) {\n                sth[i] = obj[i]\n            } else if (obj[i].constructor === Array && obj[i].length > 0) {\n                sth[i] = obj[i]\n            }\n        }\n    }\n    return sth\n}\n\n// 判断对象是否为空\nfunction checkVain (obj) {\n    var arr = Object.keys(obj)\n    return arr.length === 0 \n}\n\nfunction setStorage (key, value) {\n    var curtime = new Date().getTime() // 获取当前时间\n    localStorage.setItem(key, JSON.stringify({val: value, time: curtime})) // 转换成json字符串序列\n}\n\n// exp是设置的过期时间\nfunction getStorage (key, exp = 15 * 24 * 60 * 60 * 1000) {\n    // 获取存储的元素\n    var val = localStorage.getItem(key)\n    // 解析出json对象\n    var dataobj = JSON.parse(val)\n    // 如果当前时间 - 减去存储的元素在创建时候设置的时间 > 过期时间\n    if (new Date().getTime() - dataobj.time > exp) {\n        // 提示过期\n        return \"expires\"\n    } else {\n        return dataobj.val\n    }\n}\n\nexport {\n    envConfig,\n    getNewImagePrefix,\n    getImgPrefix,\n    // onExit,\n    setCookie,\n    getCookie,\n    delCookie,\n    clearAllCookie,\n    regExp,\n    pageOption,\n    dataFormat,\n    createUUID,\n    checkType,\n    checkKey,\n    checkFields,\n    checkVain,\n    setStorage,\n    getStorage\n}","import axios from 'axios'\n// import {envConfig, clearAllCookie, regExp} from './utils'\nimport { envConfig } from 'utils/utils'\n// import { message } from 'antd'\n\n// 无需添加token的接口\nconst noApiToken = [\n    '/api/oauth2/token'\n]\n\n// 设置请求头\nconst setHeader = (url, method)=> {\n    if(method === \"UPLOAD\"){\n        return {\n            'Accept': '*/*',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': 'X-Requested-With'\n        }\n    }\n    let header = {\n        // 'Accept': 'application/json, text/plain, */*',\n        'Accept': 'application/json, */*',\n        'Content-Type': 'application/json'\n    }\n    let token = JSON.parse(localStorage.getItem('token'))\n    // console.log('token--->', token)\n    // 如果存在token直接加入到头部\n    if(token && (!noApiToken.includes(url))){\n        // header[\"Authorization\"] = token\n    }else{\n        // header[\"Access-Control-Allow-Headers\"] = 'accept, origin, content-type'\n    }\n    return header\n}\n\n// 参数拼接\nconst urlEncode = function (param, key, encode) {\n    if (param == null) return ''\n    var paramStr = ''\n    var t = typeof (param)\n    if (t === 'string' || t === 'number' || t === 'boolean') {\n        paramStr += '&' + key + '=' + ((encode == null || encode) ? encodeURIComponent(param) : param)\n    } else {\n        for (var i in param) {\n            var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i)\n            paramStr += urlEncode(param[i], k, encode)\n        }\n    }\n    return paramStr\n}\n\nconst Ajax = (method, url, params) => {\n    method = method.toUpperCase()\n\n    var myRequest = ''\n\n    // 开发环境联调后端\n    if(url.indexOf('http') >= 0){\n        myRequest = url\n    }else{\n        myRequest = envConfig.api + url\n    }\n    // myRequest = envConfig.api + url\n\n    const header = setHeader(url, method)\n    if(method === 'UPLOAD'){\n        method = 'POST'\n    }\n    return new Promise((resolve, reject) => {\n        axios({\n            url: myRequest, \n            method,\n            headers: header,\n            // credentials : 'omit',\n            // mode : \"cors\",\n            data: params\n        }).then((response) => {\n            console.log(response)\n            // debugger\n            if (response.ok || response.status === 200) {\n                return response.data;\n            } else {\n                // try {\n                    // fundebug.notify(\"ajaxError\",response.status,{...params,myRequest})// eslint-disable-line no-undef\n                // } catch (error) {}\n                reject({status: response.status})\n            }\n        }).then(responseData => {\n            // console.log(responseData)\n            resolve(responseData)\n            if(responseData && responseData.IsSucceed) {\n                // resolve(responseData.Entity)\n            } else {\n                \n                reject(responseData)\n            }\n        }).catch(err => {\n            reject(err)\n        })\n    })\n}\n\nexport default {\n    async get ( url, data, IsUrlParams ) {\n        // 传入第三个参数 true，url 拼接data\n        if(IsUrlParams){\n            url += '/' + data\n        }else{\n            let enCodeData = urlEncode(data).substr(1)\n            if(enCodeData){\n                url += '?' + enCodeData\n            }\n        }\n        return Ajax('get', url)\n    },\n    async post ( url, data ) {\n        // data = JSON.stringify(data)\n        // console.log(data)\n        return Ajax('post', url, data)\n    },\n    async put ( url, data ) {\n        data = JSON.stringify(data)\n        return Ajax('put', url, data)\n    },\n    async delete ( url, data, IsUrlParams ) {\n        // 传入第三个参数 true，url 拼接data\n        if(IsUrlParams){\n            url += '/' + data\n            return Ajax('delete', url)\n        }\n        return Ajax('delete', url, data)\n    },\n    async uploadPost ( url, formData ) {\n        return Ajax('upload', url, formData)\n    }\n}","import React, { Component } from 'react'\nimport { Icon, Input } from 'antd'\n// import { regExp } from 'utils/utils'\n// import { sendCode } from 'services/login-service'\n\nclass InputSendCode extends Component {\n    constructor (){\n        super()\n        this.state = {\n            tel: '',\n            countdown: 0\n        }\n        this.getCode = this.getCode.bind(this)\n        this.inputChange = this.inputChange.bind(this)\n    }\n    inputChange (e) {\n        // 改变值\n        const val = e.target.value\n        this.setState({tel: val})\n        this.props.changeState({[this.props.changeKey || 'tel']: val})\n    }\n    changeCountdown (num) {\n        if (num >= 0) {\n            window.setTimeout(() => {\n                this.setState({countdown:num}, () => {\n                    if (num > 0) {\n                        this.changeCountdown(num - 1)\n                    }\n                })\n            },1000)\n        }\n    }\n    getCode () {\n        // const { tel, countdown } = this.state\n        // const time = 120\n        // if (countdown === 0) {\n        //     if (!regExp.tel.test(tel)) {\n        //         message.warning('请输入正确的手机号码！')\n        //         return false\n        //     }\n        //     this.setState({countdown: time}, () => {\n        //         let params = {\n        //             mobile: tel,\n        //             moduleName: 'login'\n        //         }\n        //         sendCode(params).then(res => {\n        //             const { success, data } = JSON.parse(res)\n        //             if (success) {\n        //                 message.success(data)\n        //             } else {\n        //                 message.success(data)\n        //             }\n        //         })\n        //         this.changeCountdown(time - 1)\n        //     })\n        // }\n    }\n    render () {\n        const { countdown } = this.state\n        const { addonBefore } = this.props\n        return (\n            <Input\n                addonBefore={addonBefore ? <Icon type={addonBefore} /> : null}\n                addonAfter={\n                    <span className=\"cup\" style={{'width':'70px', 'display':'inline-block'}} onClick={this.getCode}>\n                        { countdown > 0 ? countdown.toString() : '获取验证码' }\n                    </span>\n                }\n                maxLength={11}\n                placeholder=\"请输入手机号码\"\n                onChange={this.inputChange}\n            />\n        )\n    }\n}\nexport default InputSendCode","import React, {Component} from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Icon, Tabs, Input, Button, Form, message } from 'antd'\nimport { platformAuth } from 'services/login-service.js'\nimport { layoutTree } from 'routers/routesConfig'\nimport InputSendCode from './inputSendCode'\nimport { regExp } from 'utils/utils'\n\nconst TabPane = Tabs.TabPane\nconst FormItem = Form.Item\n\nclass LoginFrom extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            loginType: 'pass',\n            buttonLoading: false,\n            userName:'',\n            password: '',\n            tel: '',\n            code: '',\n            formValues: {}\n        }\n        this.tabsChange = this.tabsChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.loginClick = this.loginClick.bind(this)\n        this.loginSuccess = this.loginSuccess.bind(this)\n        this.loginError = this.loginError.bind(this)\n        this.changeFormState = this.changeFormState.bind(this)\n    }\n    componentDidMount () {\n        localStorage.removeItem('token')\n        localStorage.removeItem('one')\n    }\n    tabsChange (key) {\n        // tabs 标签change\n        this.setState({\n            loginType: key\n        })\n    }\n    loginClick () {\n        // 登录按钮\n        // this.setState({\n        //buttonLoading: !this.state.buttonLoading\n        // })\n    }\n    changeState (obj,fn) {\n        // 状态改变\n        this.setState(obj, () => {fn && fn()})\n    }\n    changeFormState (obj){\n        // 修改手机号\n        this.props.form.setFieldsValue(obj)\n    }\n    handleSubmit (e){\n        e.preventDefault()\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.setState({\n                    buttonLoading: true,\n                    formValues: values\n                }, () => {\n                    if(this.state.loginType === 'pass'){\n                        this.passLogin(values)\n                    }else{\n                        this.codeLogin(values)\n                    }\n                })\n            }\n        })\n    }\n    // 用户名登录\n    passLogin (obj){\n        const params = {\n            'username': obj.userName,\n            'password': obj.password\n        }\n        platformAuth(params).then(this.loginSuccess).catch(this.loginError)\n    }\n    // 验证码登录\n    codeLogin (obj) {\n        // console.log(obj)\n        // const params = {\n        //     'LoginId': obj.tel,\n        //     'Password': '',\n        // }\n        // platformAuth({requestData: params}).then(this.loginSuccess).catch(this.loginError)\n    }\n    loginSuccess (data) {\n        console.log('loginSuccess--->', data)\n        if (data.code) {\n            message.success('登录成功！')\n            localStorage.setItem('token', JSON.stringify(data.code.token))\n            this.props.history.push(`/library${layoutTree[0].path}`)\n        } else {\n            message.error('账号或密码不正确！')\n        }\n        this.setState({\n            buttonLoading: false\n        })\n        \n        // let params = {\n        //     PlatformType: 1\n        // }\n        // getUserInfo({param: params}).then((res) => {\n        //     let data = JSON.parse(res),\n        //         SecurityRoleList,\n        //         permisList = '',\n        //         allInOne\n        //     if (data) {\n        //         SecurityRoleList = data.SecurityRoleList\n        //         for (let i = 0; i < SecurityRoleList.length; i++) {\n        //             permisList = permisList + SecurityRoleList[i].Permis\n        //         }\n        //         allInOne = permisList.split(',')\n        //         allInOne = allInOne.filter(v => v !== '')\n        //         localStorage.setItem('one', JSON.stringify(allInOne))\n        //         message.success('登录成功')\n        //         this.props.history.push(`/library${layoutTree[0].path}`)\n        //     }\n        // }).catch((err) => {\n        //     this.setState({\n        //         buttonLoading: false\n        //     })\n        // })\n    }\n    loginError (data){\n        // console.log('loginError--->', data)\n        this.setState({\n            buttonLoading: false\n        })\n    }\n    render () {\n        const { loginType, buttonLoading } = this.state\n        const { getFieldDecorator } = this.props.form\n        return (\n            <Tabs defaultActiveKey={loginType} onChange={this.tabsChange}>\n                <TabPane tab=\"密码登录\" key=\"pass\" className=\"passBox\">\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormItem className=\"dfadf\">\n                            {getFieldDecorator('userName', {\n                                rules: [{\n                                    required: loginType === 'pass',\n                                    message: '请输入用户名!'\n                                }]\n                            })(\n                                <Input addonBefore={<Icon type=\"user\" />} placeholder=\"请输入： admin\" />\n                            )}\n                        </FormItem>\n                        <FormItem className=\"dfadf\">\n                            {getFieldDecorator('password', {\n                                rules: [{\n                                    required: loginType === 'pass', message: '请输入密码!'\n                                }]\n                            })(\n                                <Input type=\"password\" className=\"ffff\" addonBefore={<Icon type=\"lock\" />} placeholder=\"请输入： 123456\" />\n                            )}\n                        </FormItem>\n                        <Button type=\"primary\" className=\"width100 mt10\" loading={buttonLoading} onClick={this.loginClick} htmlType=\"submit\">登录</Button>\n                        <div className=\"mt20 tips\">用户名密码登录</div>\n                    </Form>\n                </TabPane>\n                <TabPane tab=\"手机登录\" key=\"tel\" className=\"telBox\">\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormItem>\n                            {getFieldDecorator('tel', {\n                                rules: [{\n                                    required: loginType === 'tel', message: '请输入手机号码!'\n                                },{\n                                    pattern: regExp.tel,message: '请输入正确手机号码!'\n                                }]\n                            })(\n                                <InputSendCode changeState={this.changeFormState} addonBefore=\"user\" />\n                            )}\n                        </FormItem>\n                        <FormItem>\n                            {getFieldDecorator('code', {\n                                rules: [{\n                                    required: loginType === 'tel', message: '请输入验证码!'\n                                }]\n                            })(\n                                <Input addonBefore={<Icon type=\"lock\" />} placeholder=\"请输入验证码\" />\n                            )}\n                        </FormItem>\n                        <Button type=\"primary\" className=\"width100 mt10\" loading={buttonLoading} onClick={this.loginClick} htmlType=\"submit\">登录</Button>\n                        <div className=\"mt20 tips\">手机号获取认证码登录</div>\n                    </Form>\n                </TabPane>\n            </Tabs>\n        )\n    }\n}\n\nexport default withRouter(Form.create()(LoginFrom))","import Ajax from 'api/axios'\n\n// 登录\nexport const platformAuth = (data) => {\n    return Ajax.post('/login', data)\n}\n\n// 获取用户信息\nexport const getUserInfo = (data) => {\n    return Ajax.post('/api/Account/GetAccountLoginInfo', data) \n}\n\n// 短信验证码登录\nexport const sendCode = (data) => {\n    return Ajax.post('/api/Zthysms/SendVerificationCode', data)\n}","import React, {Component} from 'react'\nimport LoginFrom from './login.js'\nimport { connect } from 'react-redux'\nimport './index.less'\n\nclass Login extends Component {\n    render () {\n        // const { responsive } = this.props\n        return (\n            <div className=\"login-page\">\n                <div className={`login-content`}>\n                {/* <div className={`login-content ${responsive.isMobile ? 'login-mobile' : ''}`}> */}\n                    <div className=\"ivu-card\">\n                        <div className=\"ivu-card-head\">\n                            <p>\n                                <i className=\"iconfont icon-login mr10\" />\n                                react 知识管理\n                            </p>\n                        </div>\n                        <div className=\"ivu-card-body\">\n                            <LoginFrom />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { responsive: state.responsiveData };\n};\nexport default connect(mapStateToProps)(Login);"],"sourceRoot":""}